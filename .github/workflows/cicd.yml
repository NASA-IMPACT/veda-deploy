name: CI/CD üöÄ

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        description: Environment to deploy to

jobs:

  deploy-veda-auth:
    name: Deploy VEDA auth üîê
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-auth
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"
      - name: Checkout to the provided Git Ref
        if: ${{ vars.VEDA_AUTH_GIT_REF }}
        run: |
          cd ${{ env.DIRECTORY }}
          git fetch
          git checkout ${{ vars.VEDA_AUTH_GIT_REF }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ env.ENVIRONMENT }}-auth-deployment"
          aws-region: "us-west-2"
      - name: Run auth deployment
        id: deploy_auth_stack
        uses: "./veda-auth/.github/actions/cdk-deploy"
        with:
          dir: "${{ env.DIRECTORY }}"
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
      - name: Get Auth Stack Name
        id: get_auth_stack
        shell: bash
        run: |
          stack=$(jq 'keys_unsorted[0]' ${HOME}/cdk-outputs.json)
          echo "auth_stackname=$stack" >> $GITHUB_OUTPUT
    outputs:
      auth_stack_name: ${{ steps.get_auth_stack.outputs.auth_stackname }}

  deploy-veda-backend:
    name: Deploy VEDA backend ‚öôÔ∏è
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-backend
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    needs: [deploy-veda-auth]
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"
      - name: Checkout to the provided Git Ref
        if: ${{ vars.VEDA_BACKEND_GIT_REF }}
        run: |
          cd ${{ env.DIRECTORY }}
          git fetch
          git checkout ${{ vars.VEDA_BACKEND_GIT_REF }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ env.ENVIRONMENT }}-backend-deployment"
          aws-region: "us-west-2"

      - name: Run deployment
        uses: "./veda-backend/.github/actions/cdk-deploy"
        id: deploy_backend_stack
        with:
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
          auth_env_aws_secret_name: ${{ vars.DEPLOYMENT_AUTH_ENV_SECRET_NAME }}
          dir: "${{ env.DIRECTORY }}"

      - name: Get Backend Stack Name
        id: get_backend_stack
        shell: bash
        run: |
          stack=$(jq 'keys_unsorted[0]' ${HOME}/cdk-outputs.json)
          echo "backend_stackname=$stack" >> $GITHUB_OUTPUT
    outputs:
      backend_stack_name: ${{ steps.get_backend_stack.outputs.backend_stackname }}

  deploy-veda-data-airflow:
    name: deploy VEDA data airflow üçÉ
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-data-airflow
      AWS_REGION: "us-west-2"
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    needs: [deploy-veda-backend]
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ env.ENVIRONMENT }}-airflow-deployment"
          aws-region: "${{ env.AWS_REGION }}"

      - name: Checkout to the provided Git Ref
        if: ${{ vars.VEDA_DATA_AIRFLOW_GIT_REF }}
        run: |
          cd ${{ env.DIRECTORY }}
          git fetch
          git checkout ${{ vars.VEDA_DATA_AIRFLOW_GIT_REF }}
          
      - name: Run deployment
        uses: "./veda-data-airflow/.github/actions/terraform-deploy"
        with:
          env-file: ".env"
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
          dir: "${{ env.DIRECTORY }}"
          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
          backend_stack_name: "${{ needs.deploy-veda-backend.outputs.backend_stack_name }}"
          auth_stack_name: "${{ needs.deploy-veda-auth.outputs.auth_stack_name }}"
