name: CI/CD üöÄ

permissions:
  id-token: write
  contents: read

on:
  - push

jobs:

  define-environment:
    name: Set ‚ú® environment ‚ú® based on the branch üå≥
    runs-on: ubuntu-latest
    steps:
      - name: Set the environment
        id: define_environment
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            echo "env_name=development" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "production" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "ieee" ]; then
            echo "env_name=ieee" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "pre-production" ]; then
            echo "env_name=pre-production" >> $GITHUB_OUTPUT
          else
            echo "No environment associated with ${GITHUB_REF##*/} branch"
          fi
      - name: Print the environment
        if: ${{ steps.define_environment.outputs.env_name }}
        run: echo "The environment is ${{ steps.define_environment.outputs.env_name }}"

    outputs:
      env_name: ${{ steps.define_environment.outputs.env_name }}

  deploy-veda-auth:
    name: Deploy VEDA auth üîê
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-auth
    needs: define-environment
    if: ${{ needs.define-environment.outputs.env_name }}
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"
      - name: Checkout to ${{ vars.VEDA_AUTH_TAG_NAME || 'origin' }}
        if: ${{ vars.VEDA_AUTH_TAG_NAME }}
        run: |
          cd ${{ env.DIRECTORY }}
          git fetch --tags origin
          git checkout tags/${{ vars.VEDA_AUTH_TAG_NAME }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-auth-deployment"
          aws-region: "us-west-2"
      - name: Run auth deployment
        id: deploy_auth_stack
        uses: "./veda-auth/.github/actions/cdk-deploy"
        with:
          dir: "${{ env.DIRECTORY }}"
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
      - name: Get Auth Stack Name
        id: get_auth_stack
        shell: bash
        run: |
          stack=$(cat ${HOME}/cdk-outputs.json | jq -r 'keys_unsorted[0]')
          echo "auth_stackname=$stack" >> $GITHUB_OUTPUT
    outputs:
      auth_stack_name: ${{ steps.get_auth_stack.outputs.auth_stackname }}

  deploy-veda-backend:
    name: Deploy VEDA backend ‚öôÔ∏è
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-backend
    needs: [define-environment, deploy-veda-auth]
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"
      - name: Checkout to ${{ vars.VEDA_BACKEND_TAG_NAME || 'origin' }}
        if: ${{ vars.VEDA_BACKEND_TAG_NAME }}
        run: |
          cd ${{ env.DIRECTORY }}
          git fetch --tags origin
          git checkout tags/${{ vars.VEDA_BACKEND_TAG_NAME }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-backend-deployment"
          aws-region: "us-west-2"

      - name: Run deployment
        uses: "./veda-backend/.github/actions/cdk-deploy"
        id: deploy_backend_stack
        with:
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
          auth_env_aws_secret_name: ${{ vars.DEPLOYMENT_AUTH_ENV_SECRET_NAME }}
          dir: "${{ env.DIRECTORY }}"

      - name: Get Backend Stack Name
        id: get_backend_stack
        shell: bash
        run: |
          stack=$(cat ${HOME}/cdk-outputs.json | jq -r 'keys_unsorted[0]')
          echo "backend_stackname=$stack" >> $GITHUB_OUTPUT
    outputs:
      backend_stack_name: ${{ steps.get_backend_stack.outputs.backend_stackname }}

  deploy-veda-data-airflow:
    name: deploy VEDA data airflow üçÉ
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-data-airflow
      AWS_REGION: "us-west-2"
    needs: [define-environment, deploy-veda-backend]
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-airflow-deployment"
          aws-region: "${{ env.AWS_REGION }}"

      - name: Checkout to ${{ vars.VEDA_AIRFLOW_TAG_NAME || 'origin' }}
        if: ${{ vars.VEDA_AIRFLOW_TAG_NAME }}
        run: |
          cd ${{ env.DIRECTORY }}
          git fetch --tags origin
          git checkout tags/${{ vars.VEDA_AIRFLOW_TAG_NAME }}
          
      - name: Run deployment
        uses: "./veda-data-airflow/.github/actions/terraform-deploy"
        with:
          env-file: ".env"
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
          dir: "${{ env.DIRECTORY }}"
          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
          backend_stack_name: "${{ needs.deploy-veda-backend.outputs.backend_stack_name }}"
          auth_stack_name: "${{ needs.deploy-veda-auth.outputs.auth_stack_name }}"