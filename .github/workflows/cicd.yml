name: CI/CD üöÄ

permissions:
  id-token: write
  contents: read

on:
  - push

jobs:

  define-environment:
    name: Set ‚ú® environment ‚ú® based on the branch üå≥
    runs-on: ubuntu-latest
    steps:
      - name: Set the environment
        id: define_environment
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            echo "env_name=development" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "production" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "ieee" ]; then
            echo "env_name=ieee" >> $GITHUB_OUTPUT
          else
            echo "No environment associated with ${GITHUB_REF##*/} branch"
          fi
      - name: Print the environment
        if: ${{ steps.define_environment.outputs.env_name }}
        run: echo "The environment is ${{ steps.define_environment.outputs.env_name }}"

    outputs:
      env_name: ${{ steps.define_environment.outputs.env_name }}

  deploy-veda-auth:
    name: Deploy VEDA auth üîê
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-auth-stack
    needs: define-environment
    if: ${{ needs.define-environment.outputs.env_name }}
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: "true"
          submodules: "recursive"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-deployment"
          aws-region: "us-west-2"
      - name: Run auth deployment
        uses: "./veda-auth-stack/.github/actions/cdk-deploy"
        with:
          dir: "${{ env.DIRECTORY }}"
          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
          project_prefix: ${{ vars.PROJECT_PREFIX }}
          stage: ${{ vars.STAGE }}


#  deploy-veda-backend:
#    name: Deploy VEDA backend ‚öôÔ∏è
#    if: ${{ needs.define-environment.outputs.env_name }}
#    runs-on: ubuntu-latest
#    env:
#      DIRECTORY: veda-backend-stack
#    needs: define-environment
#    environment: ${{ needs.define-environment.outputs.env_name }}
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          lfs: "true"
#          submodules: "recursive"
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
#          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-deployment"
#          aws-region: "us-west-2"
#
#      - name: Run deployment
#        uses: "./veda-backend-stack/.github/actions/cdk-deploy"
#        with:
#          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
#          dir: "${{ env.DIRECTORY }}"
#          project_prefix: ${{ vars.PROJECT_PREFIX }}
#          stage: ${{ vars.STAGE }}
#          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
#
#
#  deploy-veda-stac-ingestor:
#    name: deploy VEDA stac ingestor üçΩÔ∏è (without airflow integration)
#    if: ${{ needs.define-environment.outputs.env_name }}
#    runs-on: ubuntu-latest
#    env:
#      DIRECTORY: veda-ingest-stack
#      AWS_REGION: "us-west-2"
#    needs: [deploy-veda-backend, deploy-veda-auth, define-environment]
#    environment: ${{ needs.define-environment.outputs.env_name }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          lfs: "true"
#          submodules: "recursive"
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
#          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-deployment"
#          aws-region: "${{ env.AWS_REGION }}"
#
#
#      - name: Run deployment
#        uses: "./veda-ingest-stack/.github/actions/cdk-deploy"
#        with:
#          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
#          dir: "${{ env.DIRECTORY }}"
#          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
#          backend_stack_name: "${{ vars.PROJECT_PREFIX }}-backend-${{ vars.STAGE }}"
#          auth_stack_name: "${{ vars.PROJECT_PREFIX }}-auth-${{ vars.STAGE }}"
#          project_prefix: ${{ vars.PROJECT_PREFIX }}
#          stage: ${{ vars.STAGE }}
#
#  deploy-veda-data-airflow:
#    name: deploy VEDA data airflow üçÉ
#    if: ${{ needs.define-environment.outputs.env_name }}
#    runs-on: ubuntu-latest
#    env:
#      DIRECTORY: veda-data-airflow
#      AWS_REGION: "us-west-2"
#    needs: [deploy-veda-stac-ingestor, define-environment]
#    environment: ${{ needs.define-environment.outputs.env_name }}
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          lfs: "true"
#          submodules: "recursive"
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
#          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-deployment"
#          aws-region: "${{ env.AWS_REGION }}"
#
#      - name: Run deployment
#        uses: "./veda-data-airflow/.github/actions/terraform-deploy"
#        with:
#          env-file: ".env"
#          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
#          dir: "${{ env.DIRECTORY }}"
#          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
#          backend_stack_name: "${{ vars.PROJECT_PREFIX }}-backend-${{ vars.STAGE }}"
#          auth_stack_name: "${{ vars.PROJECT_PREFIX }}-auth-${{ vars.STAGE }}"
#          ingestor_stack_name: "${{ vars.PROJECT_PREFIX }}-ingestor-${{ vars.STAGE }}"
#          project_prefix: ${{ vars.PROJECT_PREFIX }}
#          stage: ${{ vars.STAGE }}
#  deploy-feature-api:
#    name: deploy Feature API  ü™¢
#    if: ${{ needs.define-environment.outputs.env_name }}
#    runs-on: ubuntu-latest
#    env:
#      DIRECTORY: veda-feature-api
#      AWS_REGION: "us-west-2"
#    needs: [deploy-veda-stac-ingestor, define-environment]
#    environment: ${{ needs.define-environment.outputs.env_name }}
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          lfs: "true"
#          submodules: "recursive"
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
#          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-deployment"
#          aws-region: "${{ env.AWS_REGION }}"
#
#      - name: Run deployment
#        uses: "./veda-feature-api/.github/actions/terraform-deploy"
#        with:
#          env-file: ".env"
#          env_aws_secret_name: ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }}
#          dir: "${{ env.DIRECTORY }}"
#          project_prefix: ${{ vars.PROJECT_PREFIX }}
#          stage: ${{ vars.STAGE }}
#          script_path: "${{ github.workspace }}/scripts/generate_env_file.py"
#
#  test-deployment:
#    name: Test Deployment üë®üèª‚Äçüî¨
#    runs-on: ubuntu-latest
#    if: ${{ needs.define-environment.outputs.env_name }}
#    needs: [define-environment, deploy-veda-data-airflow,  deploy-feature-api]
#    environment: ${{ needs.define-environment.outputs.env_name }}
#    env:
#      DIRECTORY: integration_test
#      AWS_DEFAULT_REGION: us-west-2
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.10"
#          cache: "pip"
#          cache-dependency-path: |
#            ${{ github.workspace }}/${{ env.DIRECTORY }}/requirements.txt
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
#          role-session-name: "${{ env.DIRECTORY }}-github-${{ needs.define-environment.outputs.env_name }}-integration-test"
#          aws-region: "${{ env.AWS_DEFAULT_REGION }}"
#
#      - name: Install python dependencies
#        shell: bash
#        working-directory: ${{ env.DIRECTORY }}
#        run: |
#          pip install -r requirements.txt
#          python "${{ github.workspace }}/scripts/generate_env_file.py" --secret-id ${{ vars.DEPLOYMENT_ENV_SECRET_NAME }} --stack-names ${{ vars.PROJECT_PREFIX }}-auth-${{ vars.STAGE }},${{ vars.PROJECT_PREFIX }}-backend-${{ vars.STAGE }}
#
#      - name: Integration test
#        shell: bash
#        working-directory: ${{ env.DIRECTORY }}
#        run: |
#          pytest .