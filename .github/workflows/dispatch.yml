name: Deploy and Test VEDA Instance

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment to deploy

jobs:
  define-environment:
    name: Set ‚ú® environment ‚ú® 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set the environment
        id: define_environment
        run: | 
          echo "Dispatch deployment to ${{ github.event.inputs.environment }} environment"
          echo "env_name=${{ github.event.inputs.environment }} " >> $GITHUB_OUTPUT
    outputs:
      env_name: ${{ steps.define_environment.outputs.env_name }}

  deploy-veda-auth:
    name: Deploy VEDA auth üîê
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-auth
    needs: define-environment
    if: ${{ needs.define-environment.outputs.env_name }}
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Mock veda-auth checkout and deploy action
        run: |
          echo "veda-auth"

  deploy-veda-backend:
    name: Deploy VEDA backend ‚öôÔ∏è
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-backend
    needs: [define-environment, deploy-veda-auth]
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Mock veda-backend checkout and deploy action
        run: |
          echo "veda-backend"

  deploy-veda-data-airflow:
    name: deploy VEDA data airflow üçÉ
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-data-airflow
      AWS_REGION: "us-west-2"
    needs: [define-environment, deploy-veda-backend]
    environment: ${{ needs.define-environment.outputs.env_name }}

    steps:
      - name: Mock veda-data-airflow checkout and deploy action
        run: |
          echo "veda-data-airflow"

  run-integration-and-health-checks:
    name: integration and service health checks ü©∫
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    needs: [define-environment, deploy-veda-backend, deploy-veda-data-airflow]
    steps:
      - name: Run integration and service health checks
        run: |
          echo "service health checks"

  run-dashboard-checks:
    name: run dashboard netlify checks üß≠
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    needs: [define-environment, deploy-veda-backend, deploy-veda-data-airflow]
    steps:
      - name: Run netlify dashboard preview dataset explore and analysis checks
        run: |
          echo "netlify dashboard preview dataset explore and analysis checkss"

  run-playwright-checks:
    name: run Playwright tests üé≠
    if: ${{ needs.define-environment.outputs.env_name }}
    runs-on: ubuntu-latest
    needs: [define-environment, deploy-veda-backend, deploy-veda-data-airflow]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: NASA-IMPACT/veda-config
          ref: add-playwright
          submodules: recursive

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install
        run: yarn
      
      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps
      
      - name: Playwright tests
        env:
          MAPBOX_TOKEN: ${{secrets.MAPBOX_TOKEN}}
        run: yarn test:e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30